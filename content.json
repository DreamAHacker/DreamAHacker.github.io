{"meta":{"title":"DreamAHacker's Blog","subtitle":null,"description":null,"author":"DreamAHacker","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"mysqlcluster的配置与部署","slug":"mysqlcluster的配置与部署","date":"2018-04-15T02:31:35.000Z","updated":"2018-04-15T03:38:27.881Z","comments":true,"path":"2018/04/15/mysqlcluster的配置与部署/","link":"","permalink":"http://yoursite.com/2018/04/15/mysqlcluster的配置与部署/","excerpt":"","text":"1.机器 管理节点：192.168.67.170 数据节点：192.168.67.154、192.168.67.151 SQL节点：192.168.67.154、192.168.67.151 总共三台PC机 2.基础理论知识 管理结点：从名字可以看出来，这种结点的作用就是管理其他结点的，这个节点可以查看其他数据节点和SQL节点的连接状态，并可以控制这些的节点重启。 数据节点：这些节点的作用就是存放数据，每个数据节点都有这个mysql集群的全部数据（数据冗余），也就是只要存在一个能运行就可以了。 SQL节点：这些节点向外提供SQL接口，所有数据库操作都发往这里，也是只要存在一个能运行就可以。 3.实际操作过程3.1 下载mysqlclusterMySql Cluster的下载地址：http://www.mysql.com/downloads/cluster/ 我这里3台PC机都是64位的，因此下载了一个64位的mysqlcluster。备注：注意区分64位与32位的区别。最好是64位的操作系统对应64位的软件，32位的操作系统对应32位的软件。 下载地址 3.2 安装软件 1.管理节点的配置 解压mysql-cluster-gpl-7.2.9-win64.zip包Management node的安装配置。Management node一定要安装在C盘下，并且是以下的目录（这是在运行此节点时报错，说找不到相对应的目录）。在IP为192.168.67.170的机子上生成c:/mysql/bin、C:/mysql/mysql-cluster(第一次启动后在这个文件夹会生成类似ndb_1_config.bin.1的文件，好像是为了以后启动加载的配置)和c:/mysql/bin/cluster-logs目录，在下载解压的文件目录mysql/bin中将ndb_mgmd.exe和ndb_mgm.exe复制到192.168.67.170的c:/mysql/bin目录下。 my.ini的内容为： config.ini的内容（注：ID不能从0开始，必须大于0）： 2.数据节点的配置 1.在IP为192.168.67.154 的机子上生成D:/Program Files/mysqlcluster/datanode/mysql/bin、D:/Program Files/mysqlcluster/datanode/mysql/cluster-data、D:/Program Files/mysqlcluster/datanode/mysql/bin/cluster-data.在下载的的解压文件夹/bin中将ndbd.exe复制到172.16.0.161 机子的D:/Program Files/mysqlcluster/datanode/mysql /bin目录下，并在D:/Program Files/mysqlcluster/datanode/mysql/bin目录下生成my.ini文件，文件的内容为： 2.在IP为192.168.67.151 的机子上生成D:/Program Files/mysqlcluster/datanode/mysql/bin、D:/Program Files/mysqlcluster/datanode/mysql/cluster-data、D:/Program Files/mysqlcluster/datanode/mysql/bin/cluster-data.在下载的的解压文件夹/bin中将ndbd.exe复制到172.16.0.161 机子的D:/Program Files/mysqlcluster/datanode/mysql /bin目录下，并在D:/Program Files/mysqlcluster/datanode/mysql/bin目录下生成my.ini文件，文件的内容为： 3.SQL节点的配置 1.在IP为192.168.67.151的机子上生成D:/Program Files/mysqlcluster/sqlnode目录，将下载的解压文件夹直接整个复制到D:/ProgramFiles/mysqlcluster/sqlnode/mysql目录下，在D:/ProgramFiles/mysqlcluster/sqlnode/mysql下生成my.ini文件，文件内容为： 2.在IP为192.168.67.154的机子上生成D:/Program Files/mysqlcluster/sqlnode目录，将下载的解压文件夹直接整个复制到D:/ProgramFiles/mysqlcluster/sqlnode/mysql目录下，在D:/ProgramFiles/mysqlcluster/sqlnode/mysql下生成my.ini文件，文件内容为： 3.3 部署节点 测试的过程是有顺序的，一定是：先打开192.168.67.170的管理节点，其次是192.168.67.154与192.168.67.151的数据节点，最后是192.168.67.154与192.168.67.151的SQL节点。一般在配置完毕以后 可以单个节点打开 看是否会有错误，确认无误后，即可开始依次打开节点，进行测试或启动集群。 1.打开mysql服务 在192.168.67.154与192.168.67.151两台PC机上打开mysql服务。首先进入cmd界面，然后键入 cd C:\\mysqlcluster\\sqlnode\\mysql\\bin回车；再次输入命令：mysqld –initialize-insecure回车；再次输入命令：mysqld –install；这里便已经成功安装了mysql服务，最后利用 net start mysql打开mysql的服务。（这里的前提是没安装mysql并且没有打开mysql服务） 2.打开管理节点 如上图 则是打开成功，会阻塞住。3.打开管理节点 到数据节点1（192.168.67.154）打开命令行窗口，切到C:\\mysqlcluster\\datanode\\mysql\\bin，输入 ndbd数据节点1：同理 去IP为192.168.67.151机器做同样的操作。 4.打开SQL节点 到SQL节点1（192.168.67.154）打开命令行窗口，切到C:\\mysqlcluster\\sqlnode\\mysql\\bin，输入： mysqld –console同理去SQL节点2（192.168.67.151）做相同的操作。 5.查看 数据节点和SQL节点的状态 可通过在Management node节点（管理节点192.168.67.170）的机器下，转到c:/mysql/bin目录 下输入命令： ndb_mgm 启动ndb_mgm.exe，之后输入命令： SHOW这是正确的显示，错误的显示 会有id=n （not connected，…）的错误 3.4 测试在192.168.67.154的机子上，打开DOS，进入 D:\\mysqlCluster\\sqlnode\\mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码,直接回车(mysqld –initialize-insecure : 自动生成无密码的root用户) create database test_db;//创建库 use test_db;//使用库 CREATE TABLE country ( id int(11) NOT NULL AUTO_INCREMENT COMMENT ‘国家id’, country_code varchar(20) NOT NULL COMMENT ‘国家代码’, name varchar(20) NOT NULL COMMENT ‘国家名称’, PRIMARY KEY (id), UNIQUE KEY id_UNIQUE (id), UNIQUE KEY country_code_UNIQUE (country_code), UNIQUE KEY name_UNIQUE (name)) ENGINE=ndbcluster DEFAULT CHARSET=utf8 COMMENT=’国家’;//创建一个表 insert into country(country_code,name) values(“003”,”EN”);//在这个表里插入数据 然后完成上述操作以后，到另一台 sql节点(192.168.67.151) 查看数据select * from country; 如图 测试成功。在192.168.67.154中创建的数据库和表在192.168.67.151的SQL节点中也可以看到。至此 mysqlcluster安装部署完毕。 参考资料： http://blog.csdn.net/hzw2312/article/details/8880761 https://www.2cto.com/database/201608/543060.html https://www.cnblogs.com/leohe/p/6729014.html","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"},{"name":"mysqlcluster","slug":"mysqlcluster","permalink":"http://yoursite.com/tags/mysqlcluster/"}]},{"title":"第一篇--学习使用github+hexo搭建博客","slug":"第一篇-学习使用github-hexo搭建博客","date":"2018-04-14T02:10:07.000Z","updated":"2018-04-14T03:46:23.498Z","comments":true,"path":"2018/04/14/第一篇-学习使用github-hexo搭建博客/","link":"","permalink":"http://yoursite.com/2018/04/14/第一篇-学习使用github-hexo搭建博客/","excerpt":"","text":"今天我使用了Github+Hexo搭建了一个博客平台，现在就把我的学习过程记录一下大概的步骤有以下几点:1.搭建环境准备（包括node.js和git环境，gitHub账户的配置）我这里省略了git的环境配置，前期配过git的环境2.安装Hexo3.配置Hexo4.怎样将Hexo与github page 联系起来5.怎样发布文章环境的搭建:分为以下三步：1.Node.js 的安装和准备2.git的安装和准备3.gitHub账户的配置ps:2与3步骤前期已经配置好，这里不做叙述，可以通过以下链接访问：Git教程。配置Node.js环境:下载Node.js安装包 Windows Installer 32-bit Windows Installer 64-bit保持默认设置即可，一路Next，安装很快就结束了。 然后我们检查一下是不是要求的组件都安装好了，同时按下Win和R，打开运行窗口：Windows的运行界面在命令行中输入以下命令 node -v npm -v 如下图所示，证明已经安装成功 安装Hexo:在自己的磁盘下创建一个文件夹 并cd进入这个文件夹，我是在E盘下创建的hexo文件夹 在命令行中输入 npm install hexo-cli -g 此时 cmd中会显示如下信息： 接着在cmd中输入以下命令： npm install hexo –save 上面的命令是安装hexo以及保存配置的命令，接着在命令行中输入以下命令查看是否安装成功： hexo -v 如果出现以下信息则安装成功: Hexo的相关配置:初始化Hexo接着上面的命令行，输入： hexo init npm install 这一步会自动安装一系列的组件到这一步基本配置完毕输入以下命令试用hexo： hexo g 接着输入： heso s 这是打开服务端 你会看到以下信息 E:\\hexo&gt;hexo sINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 此时，在浏览器中打开http://localhost:4000/，你将会看到： Hexo的配置就基本上完毕了，但是我们还需要和github建立联系github page与Hexo的联系配置：大概分为两步 配置git个人信息 配置Deploymentgit的个人信息配置，请看上文中的链接重点看配置Deployment找到E：\\hexo下根目录的_config.yml文件，找到Deployment，然后按照如下修改：1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master 我的github地址是https://github.com/DreamAHacker/DreamAHacker.github.io 所以配置如下：1234deploy: type: git repo: https://github.com/DreamAHacker/DreamAHacker.github.io branch: master 到这里，github page与hexo的联系就通过这个配置文件而建立起来了，此时你可以在你的github上看到 你的 io目录下多了许多文件，这些文件都是hexo的配置文件，已经被上传到了github的这个工程里开启你的博客之旅：首先我们要在命令行中，接着上面的命令做,输入以下命令： npm install hexo-deployer-git –save 这是一个hexo的扩展组件，必须要安装的，否则可能上传不了博客，这里安装如果出错，原因很有可能是github的public key没有配置好新建一篇博客，输入以下命令： hexo new post “article title” 此时在E:\\hexo\\source\\ _posts 将会看到 article title.md 文件,然后通过MarkdownPad2即可对文件进行编辑了，编辑好之后，输入以下命令： hexo g // 生成 hexo d // 部署 或者执行这一句： hexo d -g //在部署前先生成 部署成功后访问 你的地址，https://yourName.github.io,将可以看到生成的文章。写在后面:这是我学习github page+hexo之后写下的第一篇博客，排版与内容可能会有很多缺陷，但是对于学习来说我觉得应该就是纠正错误的过程，不足之处希望多多指出，左侧有我的联系方式","categories":[],"tags":[]}]}